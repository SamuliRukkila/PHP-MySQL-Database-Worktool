<?php

// Samuli Rukkila l4924(at)student.jamk.fi

@session_start();
@ob_start();

ini_set('display_errors', 1);
ini_set('display_startup_errors', 1);
error_reporting(E_ALL);

// SESSION VARIABLES

  // Holds the name of the current database
  @$_SESSION['database'];
  // Holds the name of the current searchword if initialized
  @$_SESSION['search'];
  // Holds true/false whether the safe-mode is on
  @$_SESSION['safe_mode'];
  // Latest warning message generated by MySQL
  @$_SESSION['warning_message'];
  // Current warning message whether there's error while creating a new table
  @$_SESSION['table_warning'];
  // Holds true/false whether the errors are wanted to be shown
  @$_SESSION['enable_errors'];

  // By default safe-mode is on and errors are being shown
  if (!isset($_SESSION['safe_mode'])) {
    $_SESSION['safe_mode'] = true;
  }
  if (!isset($_SESSION['enable_errors'])) {
    $_SESSION['enable_errors'] = true;
  }


// Include class which contains all MySQL functions necessary. We'll also
// make an object out of it but we're not choosing any database yet.
require_once 'lib/database_class.php';

  // Make an object from user info
  $database = new Database_class('localhost', 'root', '123');
  // Connect to MySQL
  $database->connect();
?>

<!DOCTYPE html>
<html lang='en'>
  <head>
    <meta charset='utf-8'>
    <link rel='stylesheet' href='styles/styles.css'>
    <script type='text/javascript' src='library/recoverdivscroll.js'></script>
    <title>Database-Program</title>
  </head>
  <body>


      <!-- Static header, error-message area and buttons to alter the page. -->
      <header>
        <div id='title_area'>
          <h1>DATABASE-PROGRAM</h1>
        </div>
          <?php
          if ($_SESSION['enable_errors']) {
            if (isset($_SESSION['warning_message'])) { ?>
              <div class='error_top_area' id='error_active'>
                <b>ERROR:</b> <?php echo $_SESSION['warning_message']; ?>
              </div>
              <form id='dismiss_error_form' action='<?php $database->confirmError(); ?>' method='post'>
                <input class='dark_red' type='submit' name='confirm_error' value='&#10005;'>
              </form>
            <?php } else { ?>
              <div class='error_top_area' id='error_unactive'></div>
          <?php } } ?>
          <div class='header_buttons'>
            <form id='reload' action='<?php $database->reload(); ?>' method='post'>
              <input class='dark_blue' type='submit' name='reload_page' value='Reload page'>
            </form>
            <form id='error_status' action='<?php $database->errorStatus(); ?>' method='post'>
              <input class='dark_blue' type='submit' name='change_status'
                <?php if ($_SESSION['enable_errors']) { ?>
                  value='Disable errors'
                <?php } else { ?>
                  value='Enable errors'
                <?php } ?> >
              </div>
            </form>
      </header>


      <!-- Database navigation-system. Includes the manipulation of the databases.
      Here you can choose, create or delete databases. Also includes toggable safe-mode,
      in which you'll only see databases created only in the program. -->
      <nav>
        <div id='safe_mode'>
          <h4>Safe mode:</h4>
          <form action='<?php $database->safe_mode() ?>' method='post'>
            <input type='radio' name='mode' value='on'
            <?php if ($_SESSION['safe_mode'] == true) { ?> checked <?php } ?> > On
            <input type='radio' name='mode' value='off'
            <?php if ($_SESSION['safe_mode'] == false) { ?> checked <?php } ?> > Off
            <input class='dark_blue' type='submit' name='change_error_status' value='Change'>
          </form>
        </div>
        <div class='db' id='choose_db'>
          <h2>Databases:</h2>
          <form action='<?php $database->modifyDatabase(); ?>' method='post'>
            <?php $database->showDatabases(); ?>
            <input class='dark_blue' type='submit' value='Choose' name='choose_db'>
            <input class='dark_blue' type='submit' value='Delete' name='delete_db'
              onclick='return confirm("Are you sure you want to delete this database?")'>
          </form>
        </div>
        <div class='db' id='create_db'>
          <h2>Create database:</h2>
          <form action=' <?php $database->modifyDatabase(); ?>' method='post'>
            <p>Name: <input type='text' name='db'></p>
            <h3>Content:</h3>
            <p><input type='radio' name='content' value='basketball' checked>Basketball</p>
            <p><input type='radio' name='content' value='chainstore'>Chainstore</p>
            <p><input type='radio' name='content' value='steam'>Steam</p>
            <p><input type='radio' name='content' value='library'>Library</p>
            <p><input type='radio' name='content' value='empty'>Empty</p>
            <input class='dark_blue' type='submit' value='Create' name='create_db'>
          </form>
        </div>
      </nav>


      <!-- If database-session variable hasn't been set this will only print
      a text saying "Please choose a database." If it has been set, the whole
      database will be printed here containing all of the columns, rows and values.
      It'll also print the additional buttons for hiding database and doing search-
      querys.

      If search-session variable will be set, it'll instead print the search
      query. If you hide the database while being in search-session, the hide-session
      will be removed automatically.-->asdasd1
      <main id='main'>
        <?php
          if (isset($_SESSION['database'])) { ?>
            <div id='hide'>
              <?php if (isset($_SESSION['search'])) { ?>
                <form action='<?php $database->removeSearch(); ?>' method='post'>
                  <input class='red' id='hide_search' type='submit'
                    value='Stop searching' name='hide_search'>
                </form>
              <?php } else { ?>
                <form action='<?php $database->hideDatabase(); ?>' method='post'>
                  <input class='red' id='hide_db' type='submit'
                    value='Hide database' name='hide_db'>
                </form>
              </div>
            <?php } if (isset($_SESSION['search'])) { ?>
              <div id='search_search' class='search'>
            <?php } else { ?>
              <div id='search_db' class='search'>
            <?php } ?>
                <form action='<?php $database->confirmSearch(); ?>' method='post'>
                  <input type='search' name='searchword' placeholder='Catchword'>
                  <input class='blue' type='submit' name='search' value='Search'>
                </form>
              </div>
            <?php if (isset($_SESSION['search'])) {
              $database->search();
                } else {
              $database->printDatabase();
                    } }
          else { ?>
            <h2>Please choose a database.</h2><hr>
          <?php }; ?>
      </main>



      <!-- Information bar on the right. See the amount of databases, tables,
      columns and rows in numbers -->
      <aside class='aside' id='statistic'>
          <table>
            <tr>
              <th>Databases</th>
              <th>Tables</th>
              <th>Columns</th>
              <th>Rows</th>
            </tr>
            <tr>
              <?php $database->getInformation(); ?>
            </tr>
          </table>
      </aside>


      <!-- Table-maker on the right. Ability to create tables and put own
      content inside of them. -->
      <aside class='aside' id='add_table'>
      <?php if (isset($_SESSION['database'])) { ?>
        <?php if (!isset($_SESSION['table_warning'])) {?>
          <form action=' <?php $database->addTable(); ?>' method='post'>
            <table id='empty_table'>
              <tr>
                <td><h4>Add table:</h4></td>
                <td><input type='text' name='table' placeholder="Table's name"></td>
                <td><input class='blue' type='submit' name='create_table' value='Create table'></td>
              </tr>
              <tr>
              </tr>
              <tr>
                <td>Column</td>
                <td>Datatype</td>
                <td>Not null</td>
              </tr>
              <tr id='key_column'>
                <td><input type='text' name='key' placeholder='Key column'></td>
                <td><input type='text' name='key_dt' placeholder='INT / ..'></td>
                <td><input type='checkbox' name='key_auto'>
                  <div id='auto_increment_label'>Auto</div>
                </td>
              </tr>
              <?php for ($i=2; $i < 8; $i++) { ?>
                <tr>
                  <td><input type='text' name='column<?php echo $i;?>'></td>
                  <td><input type='text' name='column_dt<?php echo $i;?>'></td>
                  <td><input type='checkbox' name='column_notnull<?php echo $i;?>'></td>
                </tr>
              <?php } ?>
                <tr>
                  <td colspan='3'>Additional code:</td>
                </tr>
                <tr>
                  <td colspan='3' rowspan='2'><textarea style='resize: none;'
                     cols='38' rows='4' name='additional_code'
                     placeholder='CONSTRAINT xxx FOREIGN KEY (column) REFERENCES Table(column) ON UPDATE CASCADE ON DELETE CASCADE ...'
                     ></textarea>
                  </td>
                </tr>
            </table>
          </form>
        <?php } else { echo $_SESSION['table_warning']; ?>
                <form action='<?php $database->confirmError(); ?>' method='post'>
                  <input class='blue' type='submit' name='confirm_error_table' value='Got it!'>
                </form>
      <?php }} else { ?>
          <h4>Please choose a database.</h4><hr>
      <?php  } ?>
      </aside>


      <!-- On the right. Some massive functions which will alter databases, tables, columns and rows. -->
      <aside class='aside' id='multifunctional'>
        <table id='empty_table'>
          <tr>
            <td>
              <form action=' <?php $database->deleteAllDatabases(); ?> ' method='post'>
                <input class='ivory multi_button' type='submit' name='delete_all' value='Delete all databases'
                 onclick='return confirm("This will delete all the databases. Are you sure?")'>
              </form>
            </td>
            <td>
              <form action=' <?php $database->massCreateDatabases(); ?>' method='post'>
                <input class='ivory multi_button' type='submit' name='create_db_many' value='Mass-create databases'>
              </form>
            </td>
          </tr>
          <tr>
            <td>
              <form action=' <?php $database->truncateAllTables(); ?>' method='post'>
                <!-- If database has been activated, make this button active - otherwise disable it -->
                <?php if (isset($_SESSION['database'])) { ?>
                  <input class='ivory multi_button' value='Truncate tables'
                <?php } else { ?>
                  <input class='gray disabled_button' value='Choose database'
                <?php } ?>
                    type='submit' name='truncate_tbl'>
              </form>
            </td>
            <td>
              <form action=' <?php  ?>' method='post'>
                <!-- If database has been activated, make this button active - otherwise disable it -->
                <?php   if (isset($_SESSION['database'])) { ?>
                  <input class='ivory multi_button'  value='Mass-create tables'
                <?php } else { ?>
                  <input class='gray disabled_button' value='Choose database'
                <?php } ?>
                    type='submit' name='create_tbl_many'>
              </form>
            </td>
          </tr>
        </table>
      </aside>



      <!-- On the right. Information about the author of the program. -->
      <aside class='aside' id='author'>
        <p>&copy; Samuli Rukkila</p>
        <p>l4924(at)student.jamk.fi, JAMK </p><hr>
        <p id='lastModified'>
          <script>
            document.write("Page was last modified on: " + document.lastModified);
          </script>
        </p>
      </aside>


      <!-- A script to keep the page at the same y-position after refresh. Affects
           <main> - div which includes database print. -->
      <script type='text/javascript'>
          RecoverDivScroll.init('', 'main');
      </script>

  </body>
</html>
